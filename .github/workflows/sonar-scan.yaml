name: SonarQube Scan

on:
  workflow_call:
    inputs:
      project-key:
        description: "SonarQube project key"
        required: true
        type: string
      sources:
        description: "Source directories"
        required: false
        default: "src/main/java,src/test/java"
        type: string
      binaries:
        description: "Compiled classes path"
        required: false
        default: "target/classes"
        type: string
      exclusions:
        description: "File patterns to exclude"
        required: false
        default: "**/*.js"
        type: string
      jacoco-report:
        description: "JaCoCo XML coverage report path"
        required: false
        default: "target/site/jacoco/jacoco.xml"
        type: string
      scanner-tool:
        description: "Scanner tool, e.g., sonar-scanner or mvn"
        required: false
        default: "mvn"
        type: string

    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true

jobs:
  sonar-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - name: Run SonarQube Scan
        run: |
          echo "Running SonarQube scan for project: ${{ inputs['project-key'] }}"
          if [[ "${{ inputs['scanner-tool'] }}" == "mvn" ]]; then
            mvn sonar:sonar \
              -Dsonar.projectKey=${{ inputs['project-key'] }} \
              -Dsonar.sources="${{ inputs.sources }}" \
              -Dsonar.java.binaries="${{ inputs.binaries }}" \
              -Dsonar.exclusions="${{ inputs.exclusions }}" \
              -Dsonar.coverage.jacoco.xmlReportPaths="${{ inputs['jacoco-report'] }}" \
              -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          else
            # Assume scanner-tool is sonar-scanner CLI
            "${{ inputs['scanner-tool'] }}/bin/sonar-scanner" \
              -Dsonar.projectKey="${{ inputs['project-key'] }}" \
              -Dsonar.sources="${{ inputs.sources }}" \
              -Dsonar.java.binaries="${{ inputs.binaries }}" \
              -Dsonar.exclusions="${{ inputs.exclusions }}" \
              -Dsonar.coverage.jacoco.xmlReportPaths="${{ inputs['jacoco-report'] }}" \
              -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
              -Dsonar.login=${{ secrets.SONAR_TOKEN }}"
          fi
