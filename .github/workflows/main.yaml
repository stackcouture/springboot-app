name: Java Spring App Deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Determine Commit SHA
        id: commit
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_SHA_WITH_BUILD="${COMMIT_SHA}-${{ github.run_number }}"
          echo "COMMIT_SHA_WITH_BUILD=$COMMIT_SHA_WITH_BUILD" >> $GITHUB_ENV
          echo "Commit SHA with build number: $COMMIT_SHA_WITH_BUILD"

  build:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: '3.9.6' 

      - name: Build + Test + Jacoco
        run: |
          echo "Building project, running tests, and generating Jacoco report..."
          mvn clean verify jacoco:report

      - name: Generate Javadoc
        run: mvn javadoc:javadoc

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/

  security-fs-scan:
    needs: build
    uses: ./.github/workflows/trivy-fs.yaml
    with:
      scan-path: .

  # sonar-scan:
  #   needs: security-fs-scan
  #   uses: ./.github/workflows/sonar-scan.yaml
  #   name: SonarQube Scan
  #   with:
  #     project-key: sprintboot-app
  #     sources: src/main/java
  #     tests: src/test/java
  #     binaries: target/classes
  #     test-binaries: target/test-classes
  #     exclusions: "**/*.js"
  #     jacoco-report: target/site/jacoco/jacoco.xml
  #     scanner-tool: mvn
  #   secrets:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  # quality-gate:
  #   needs: sonar-scan
  #   runs-on: self-hosted
  #   steps:
  #     - name: SonarQube Quality Gate Check
  #       uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
  #       with:
  #         sonar-token: ${{ secrets.SONAR_TOKEN }}
  #         host-url: ${{ secrets.SONAR_HOST_URL }}
