name: Java Spring App Deployment
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Determine Commit SHA
        id: commit
        run: |
          COMMIT_SHA=$(git rev-parse HEAD)
          COMMIT_SHA_WITH_BUILD="${COMMIT_SHA}-${{ github.run_number }}"
          echo "COMMIT_SHA_WITH_BUILD=$COMMIT_SHA_WITH_BUILD" >> $GITHUB_ENV
          echo "Commit SHA with build number: $COMMIT_SHA_WITH_BUILD"

  build:
    runs-on: Agent-1
    needs: checkout
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: '3.9.6' 

      - name: Build + Test
        run: |
          echo "Building and running tests..."
          mvn clean verify jacoco:report

      - name: Generate Javadoc
        run: |
          echo "Generating Javadoc..."
          mvn javadoc:javadoc

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco/
      
      - name: Test SonarQube connectivity
        run: |
          curl -v ${{ secrets.SONAR_HOST_URL }}

  security-fs-scan:
    needs: build
    uses: ./.github/workflows/trivy-fs.yaml
    with:
      scan-path: .

    
  
  # sonar-scan:
  #   needs: security-fs-scan
  #   uses: ./.github/workflows/sonar-scan.yaml
  #   with:
  #     project-key: sprintboot-app
  #     main-sources: src/main/java
  #     test-sources: src/test/java
  #     binaries: target/classes
  #     exclusions: "**/*.js"
  #     jacoco-report: target/site/jacoco/jacoco.xml
  #   secrets:
  #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  sonar-scan:
    needs: security-fs-scan
    uses: ./.github/workflows/sonar-scan.yaml
    with:
      project-key: sprintboot-app
      sources: src/main/java,src/test/java
      binaries: target/classes
      exclusions: "**/*.js"
      jacoco-report: target/site/jacoco/jacoco.xml
      scanner-tool: mvn
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  




      